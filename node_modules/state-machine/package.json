{
  "name": "state-machine",
  "description": "Simple JavaScript State Machine Library",
  "keywords": [
    "statemachine",
    "state-machine"
  ],
  "author": {
    "name": "Michael Wheeler"
  },
  "version": "0.0.3",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/wheeyls/stateMachine/blob/master/LICENSE"
    }
  ],
  "engines": {
    "node": ">=0.4.0"
  },
  "main": "stateMachine",
  "homepage": "http://github.com/wheeyls/stateMachine",
  "repository": {
    "type": "git",
    "url": "https://github.com/wheeyls/stateMachine.git"
  },
  "readme": "StateMachine.js\n===============\n\nA simple state machine library. Loosely based on the ruby library aasm.\n\nExample\n-------\n### Node\n    var stateMachine = require('state-machine');\n    // do stuff\n\n### Browser\n    (function (stateMachine) {\n      // do stuff\n    }(window.stateMachine));\n\n### Define States and Events\n\n    var myStates = stateMachine(function () {\n      this.state('young', { initial: true })\n        .state('middleage')\n        .state('old')\n        .event('age', 'young', 'middleage')\n        .event('age', 'middleage', 'old')\n        .event('enlightened', ['young', 'middleage', 'old'], 'bliss')\n        ;\n    });\n\n    console.log(myState.currentState()); // young\n    myStates.age();\n    console.log(myState.currentState()); // middleage\n    myStates.age();\n    console.log(myState.currentState()); // old\n    myStates.enlightened();\n    console.log(myState.currentState()); // bliss\n\nAPI\n---\nPick your poison:\n\n### Callback\n\n    var myStates = stateMachine(function (builder) {\n      builder.state('young', { initial: true })\n             .event(...)\n    });\n\n### Chain\n\n    var myStates = stateMachine();\n\n    myStates\n      .build()\n      .state('young', { initial: true })\n      .event()\n      ...\n\nHooks\n-----\n    var myStates = stateMachine();\n\n    myStates.build()\n      .state('young', { initial: true\n                      , leave: function () { /* do stuff */ }\n                      , enter: function () { /* do stuff */ }\n                      });\n\n    myStates.onChange = function (currentStateName, previousStateName) {\n      // do stuff\n    };\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/wheeyls/stateMachine/issues"
  },
  "_id": "state-machine@0.0.3",
  "_shasum": "83a9a7340326c65ee38a1f37c814ab9f69d6210f",
  "_from": "state-machine@",
  "_resolved": "https://registry.npmjs.org/state-machine/-/state-machine-0.0.3.tgz"
}
